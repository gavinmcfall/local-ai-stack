---
services:
  searxng:
    image: searxng/searxng@sha256:${SEARXNG_VERSION}
    ports:
      - 8081:8080  # Adjust external port if needed
    env_file:
      - .env
    environment:
      - BASE_URL=http://localhost:8081
    volumes:
      - ./resources/searxng/settings.yaml:/etc/searxng/settings.yaml:ro
      - ./resources/searxng/limiter.toml:/etc/searxng/limiter.toml:ro
    networks:
      - pony_prompt_local

  qdrant:
    image: docker.io/qdrant/qdrant:${QDRANT_VERSION}
    ports:
      - 6333:6333
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pony_prompt_local
    volumes:
      - ./qdrant_data:/qdrant/storage
    restart: unless-stopped

  postgres:
    image: postgres@sha256:${POSTGRES_VERSION}
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./resources/initdb:/docker-entrypoint-initdb.d:ro
    networks:
      - pony_prompt_local

  pgadmin:
      image: dpage/pgadmin4:latest
      ports:
        - "8086:80"
      networks:
        - pony_prompt_local
      env_file:
        - .env
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@example.com
        PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
        PGADMIN_CONFIG_SERVER_MODE: 'False'
      volumes:
        - pgadmin_data:/var/lib/pgadmin
      depends_on:
        - postgres
      restart: unless-stopped


  redis:
    image: redis@sha256:${REDIS_VERSION}
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    networks:
      - pony_prompt_local
    volumes:
      - redis_data:/data

  redisinsight:
    image: redis/redisinsight:2.68.0
    ports:
      - "8084:5540"  # Note: RedisInsight runs on 5540, not 8001
    networks:
      - pony_prompt_local
    environment:
      - RI_FILES_LOGGER=false
      - RI_STDOUT_LOGGER=true
    volumes:
      - redisinsight_data:/data
    user: "1000:1000"  # Match your host user
    depends_on:
      - redis
    restart: unless-stopped

  litellm:
    image: ghcr.io/berriai/litellm-non_root@sha256:${LITELLM_VERSION}
    ports:
      - 4000:4000
    env_file:
      - .env
    environment:
      QDRANT_API_BASE: http://qdrant:6333
      DATABASE_URL: postgresql://litellm_user:litellm_pass@postgres:5432/litellm
      LITELLM_DEBUG: true
      LITELLM_MODE: development
      LITELLM_DONT_SHOW_FEEDBACK_BOX: true
      LITELLM_PORT: 4000
      UI_USERNAME: admin
      UI_PASSWORD: admin
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      AWS_ROLE_NAME: ${AWS_ROLE_NAME}
      AWS_PROFILE_NAME: playpen-mgmt/admin
      AWS_REGION: ${AWS_REGION:-us-west-2}
      AWS_DEFAULT_REGION: ${AWS_REGION:-us-west-2}
      AWS_CREDENTIAL_EXPIRATION: ${AWS_CREDENTIAL_EXPIRATION}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    networks:
      - pony_prompt_local
    volumes:
      - ./resources/litellm/config.yaml:/app/config.yaml:ro
      - ./resources/litellm/model_config.yaml:/app/model_config.yaml:ro
    command: [--config, /app/config.yaml]
    restart: unless-stopped

  open-webui:
    image: ghcr.io/open-webui/open-webui@sha256:${OPENWEBUI_VERSION}
    networks:
      - pony_prompt_local
    ports:
      - 3000:8080
    env_file:
      - .env
    environment:
      WEBUI_AUTH: "false"
      GLOBAL_LOG_LEVEL: "DEBUG"
      ENABLE_OPENAI_API: "true"
      OPENAI_API_BASE_URL: http://litellm:4000
      OPENAI_API_KEY: sk-dummyKey # required but not validated
      DATABASE_URL: postgresql://openwebui_user:openwebui_pass@postgres:5432/openwebui
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RAG_VECTOR_DB: qdrant
      VECTOR_DB: qdrant
      QDRANT_URI: http://qdrant:6333
      RAG_EMBEDDING_ENGINE: ollama
      RAG_EMBEDDING_MODEL: nomic-embed-text
      ENABLE_WEB_SEARCH: "true"
      RAG_WEB_SEARCH_ENGINE: searxng
      SEARXNG_QUERY_URL: http://searxng:8080/search?q=<query>
      ENABLE_WEBSOCKET_SUPPORT: "true"
      WEBSOCKET_MANAGER: redis
      WEBSOCKET_REDIS_URL: redis://redis:6379
      CACHE_ENABLED: "false"
    volumes:
      - ./open_webui_data:/app/backend/data
    restart: unless-stopped
    depends_on:
      - qdrant
      - searxng
      - redis

  n8n:
    image: docker.io/n8nio/n8n@sha256:${N8N_VERSION}
    networks:
      - pony_prompt_local
    ports:
      - 8082:80
    env_file:
      - .env
    environment:
      GENERIC_TIMEZONE: ${TIMEZONE}
      N8N_PORT: 80
      N8N_HOST: "localhost"
      WEBHOOK_URL: "http://localhost:8082" # not public so can not be accessed externally
      N8N_LOG_LEVEL: debug
      N8N_LOG_OUTPUT: console, file
      N8N_PERSONALIZATION_ENABLED: true
      N8N_VERSION_NOTIFICATIONS_ENABLED: true
      N8N_DIAGONISTICS_ENABLED: true
      N8N_HIRING_BANNER_ENABLED: false
      N8N_USER_MANAGEMENT_DISABLED: false
      N8N_AUTH_DISABLED: "false"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
      N8N_COMMUNITY_PACKAGES_ENABLED: true
      N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: true
      # Public API
      N8N_PUBLIC_API_DISABLED: false
      N8N_PUBLIC_API_SWAGGERUI_DISABLED: false
      NODE_FUNCTION_ALLOW_BUILTIN: "*"
      N8N_METRICS: true
      DB_TYPE: postgresdb
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_USER: n8n_user
      DB_POSTGRESDB_PASSWORD: n8n_pass
      N8N_USER_FOLDER: /home/n8n/app
    volumes:
      - ./n8n_data:/home/n8n/app # Maps to the persistent volume claim
      - ./resources/n8n/init-n8n.sh:/init-n8n.sh:ro
    entrypoint: ["/bin/sh", "/init-n8n.sh"]
    user: "1000:1000"
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  pony_prompt_local:

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  redisinsight_data: